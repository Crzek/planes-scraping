# FROM python:3.11.9-slim-bullseye as builder
# Usa una imagen base compatible con ARM
FROM --platform=linux/arm64 python:3.11.9-bullseye

# Establece el directorio de trabajo
WORKDIR /app

# Copia los requisitos al contenedor
COPY ./requirements.txt /app/

# Instala las dependencias de Python
# RUN pip install --trusted-host pypi.python.org -r requirements.txt
RUN pip install -r requirements.txt

# install google chrome
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
RUN apt-get -y update --fix-missing
RUN apt-get install -y google-chrome-stable

# install chromedriver
RUN apt-get install -yqq unzip
RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
RUN unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/


# Añade una instrucción de salud opcional (si aplica)
# HEALTHCHECK CMD wget --spider http://localhost:8000 || exit 1


# CMD [ "python" ,"main.py"]

# Segunda etapa
# FROM python:3.11.9-slim-bullseye

# WORKDIR /app

# COPY . /app/

# # Copiamos los paquetes instalados de la primera etapa
# COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
# COPY --from=builder /usr/local/bin /usr/local/bin

CMD [ "/bin/sh" ]